
plugins {
	id 'application'
	id 'checkstyle'
	id 'com.adarshr.test-logger' version '3.2.0'
	id 'com.github.ben-manes.versions' version '0.42.0'
	id 'jacoco'
	id("io.freefair.lombok") version "8.1.0"
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'

repositories {
	mavenCentral()
}

compileJava {
	options.release = 20
	options.encoding = 'UTF-8'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(20)
	}
}

application {
	mainClass = 'hexlet.code.App'
}

dependencies {
	implementation("com.konghq:unirest-java:3.11.09")

	implementation("org.jsoup:jsoup:1.17.1")

	//databases
	implementation("com.h2database:h2:2.2.222")
	implementation("com.zaxxer:HikariCP:5.0.1")
	implementation('org.postgresql:postgresql:42.6.0')

	implementation("io.javalin:javalin:5.6.1")
	implementation("gg.jte:jte:3.0.1")
	implementation("io.javalin:javalin-rendering:5.6.0")
	implementation("io.javalin:javalin-bundle:5.6.2")
	implementation("org.slf4j:slf4j-simple:2.0.7")

	testImplementation(platform("org.junit:junit-bom:5.9.1"))
	testImplementation("org.junit.jupiter:junit-jupiter")
	testImplementation("org.assertj:assertj-core:3.23.1")


	testImplementation platform('org.junit:junit-bom:5.9.1')
	testImplementation('org.junit.jupiter:junit-jupiter')
	testImplementation('org.slf4j:slf4j-simple:2.0.7')
	testImplementation("org.assertj:assertj-core:3.24.2")
	implementation ('com.konghq:unirest-java:3.14.5')
	testImplementation('com.squareup.okhttp3:mockwebserver:4.11.0')
	testImplementation('org.postgresql:postgresql:42.6.0')

}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

testlogger {
	showStandardStreams true
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}

checkstyle {
	toolVersion '10.12.2'
	configFile = rootProject.file("${rootDir}/config/checkstyle/checkstyle.xml")
}
